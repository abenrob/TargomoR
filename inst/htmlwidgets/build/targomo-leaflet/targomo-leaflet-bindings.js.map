{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./inst/htmlwidgets/bindings/targomo-leaflet-bindings.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","LeafletWidget","methods","addTargomoPolygons","api_key","region","points","layerId","group","options","popup","popupOptions","label","labelOptions","df","DataFrame","col","addGenericLayers","this","sources","j","keys","length","source","id","lat","lng","push","async","client","tgm","TargomoClient","layer","leaflet","TgmLeafletPolygonOverlay","strokeWidth","inverse","travelType","travelEdgeWeights","travelTimes","edgeWeight","srid","serializer","intersectionMode","targomoData","polygons","fetch","setData","callPolygonService"],"mappings":"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","file":"targomo-leaflet-bindings.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/* global LeafletWidget, tgm */\r\n\r\nasync function callPolygonService(api_key, region, sources, options) {\r\n\r\n  // create targomo client\r\n  let client = new tgm.TargomoClient(region, api_key);\r\n\r\n  // define the polygon overlay\r\n  let layer = new tgm.leaflet.TgmLeafletPolygonOverlay({\r\n    strokeWidth: options.strokeWidth,\r\n    inverse: options.inverse\r\n  });\r\n\r\n  // set other options\r\n  options = {\r\n    travelType: options.travelType,\r\n    travelEdgeWeights: options.travelTimes,\r\n    edgeWeight: 'time',\r\n    srid: 4326,\r\n    serializer: 'json',\r\n    intersectionMode: options.intersectionMode\r\n  };\r\n\r\n  // get the polygons\r\n  let targomoData = await client.polygons.fetch(sources, options);\r\n\r\n  // set the data to the layer\r\n  layer.setData(targomoData);\r\n\r\n}\r\n\r\nLeafletWidget.methods.addTargomoPolygons = function(api_key, region, points, layerId, group, options, popup, popupOptions, label, labelOptions) {\r\n\r\n  (function() {\r\n\r\n    // encapsulate data for layer in a DataFrame\r\n    let df = new LeafletWidget.DataFrame()\r\n      .col('api_key', api_key)\r\n      .col('region', region)\r\n      .col('points', points)\r\n      .col('layerId', layerId)\r\n      .col('group', group)\r\n      .col('popup', popup)\r\n      .col('popupOptions', popupOptions)\r\n      .col('label', label)\r\n      .col('labelOptions', labelOptions)\r\n      .col('options', options);\r\n\r\n    // add the layers\r\n    LeafletWidget.methods.addGenericLayers(this, 'shape', df, function(df, i) {\r\n\r\n      let api_key = df.get(i, 'api_key');\r\n      let region  = df.get(i, 'region');\r\n      let points  = df.get(i, 'points');\r\n      let options = df.get(i, 'options');\r\n\r\n      let sources = [];\r\n      for (let j = 0; j < Object.keys(points).length; j++) {\r\n        let source = {'id': j, 'lat': points.lat[j], 'lng': points.lng[j]};\r\n        sources.push(source);\r\n      }\r\n\r\n      return callPolygonService(api_key, region, sources, options);\r\n\r\n    });\r\n\r\n  }).call(this);\r\n\r\n};\r\n"],"sourceRoot":""}